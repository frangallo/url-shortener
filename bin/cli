require 'launchy'

class UrlShortener
  attr_reader :user

  def prompt
    gets.chomp
  end

  def get_email
    puts "Input your email:"
    input = prompt
  end

  def find_user
    user_email = get_email
    @user = User.find_by email: user_email
    #p @user
  end

  def option_generator
    puts "What do you want to do?"
    puts " 0. Create shortened URL"
    puts "1. Visit shortened URL"
    url_option(prompt.to_i)
  end

  def url_option(num)
    num == 1 ? prompt_short_url : create_short_url
  end

  def create_short_url
    long_url = prompt_long_url
    url_object = ShortenedUrl.create_for_user_and_long_url!(long_url, user)
    puts "Short URL is :#{url_object.short_url}"
  end

  def prompt_short_url
    puts "Type in the shortened URL"
    visit(prompt)
  end

  def prompt_long_url
    puts "Type in your long URL"
    prompt
  end

  def visit(input)
    p @user
    p input
    Visit.record_visit!(@user, ShortenedUrl.find_by_short_url(input)).save
    long_url = ShortenedUrl.find_by_short_url(input).long_url
    Launchy.open(long_url)
  end

  def run
    find_user
    option_generator

  end


end

c = UrlShortener.new
c.run
